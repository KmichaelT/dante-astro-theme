---
import BaseLayout from '../../layouts/BaseLayout.astro';
import ProjectPreview from '../../components/ProjectPreview.astro';
import { supabase } from '../../lib/supabase';

export async function getStaticPaths() {
    // Fetch all projects from Supabase
    const { data: supabaseProjects, error } = await supabase
        .from('projects')
        .select(
            `
      *,
      project_features (*),
      project_objectives (*),
      project_technologies (*),
      project_testimonials (*)
    `
        )
        .order('publish_date', { ascending: false });

    if (error) throw error;

    // Build paths for each project
    const supaPaths = supabaseProjects.map((project, index) => ({
        params: { id: project.slug },
        props: {
            project,
            // We can keep isSupabase if you still want that flag
            isSupabase: true,
            prevProject: index + 1 !== supabaseProjects.length ? supabaseProjects[index + 1] : null,
            nextProject: index !== 0 ? supabaseProjects[index - 1] : null
        }
    }));

    // Return only Supabase-based routes (no MD)
    return supaPaths;
}

const { project, prevProject, nextProject } = Astro.props;

// Pull data directly from your Supabase project object
const title = project.title;
const description = project.description;
const seoImage = {
    src: project.seo_image_src,
    alt: project.seo_image_alt
};
---

<BaseLayout title={title} description={description} image={seoImage} pageType="article" showHeader={false}>
    <main class="grow w-full max-w-3xl mx-auto">
        <article class="mb-16 sm:mb-24">
            <header class="mb-8">
                <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">
                    {title}
                </h1>
            </header>

            <div class="max-w-none prose prose-dante sm:prose-lg">
                {/* Replace or adjust these fields to match your Supabase table */}
                {
                    project.preview_image_src && (
                        <p>
                            <img src={project.preview_image_src} alt={`${title} preview`} />
                        </p>
                    )
                }

                <p>
                    <strong>Project Overview:</strong>
                    {project.content}
                </p>

                {
                    project.project_objectives?.length > 0 && (
                        <>
                            <h2 id="objectives">Objectives</h2>
                            <ol>
                                {project.project_objectives.map((objective: { content: string }) => (
                                    <li>{objective.content}</li>
                                ))}
                            </ol>
                        </>
                    )
                }

                {
                    project.project_features?.length > 0 && (
                        <>
                            <h2 id="features">Features</h2>
                            {project.project_features.map((feature: any, index: number) => (
                                <>
                                    <ol start={index + 1}>
                                        <li>
                                            <strong>{feature.title}:</strong>
                                        </li>
                                    </ol>
                                    <ul>
                                        <li>{feature.description}</li>
                                    </ul>
                                </>
                            ))}
                        </>
                    )
                }

                {
                    project.project_technologies?.length > 0 && (
                        <>
                            <h2 id="technology-stack">Technology Stack</h2>
                            <ul>
                                {project.project_technologies.map((tech: { name: string; description: string }) => (
                                    <li>
                                        {tech.name}: {tech.description}
                                    </li>
                                ))}
                            </ul>
                        </>
                    )
                }

                {
                    project.outcome && (
                        <>
                            <h2 id="outcome">Outcome</h2>
                            <p>{project.outcome}</p>
                        </>
                    )
                }

                {
                    project.project_testimonials?.length > 0 && (
                        <>
                            <h2 id="client-testimonials">Client Testimonials</h2>
                            {project.project_testimonials.map((testimonial: { quote: string; author: string }) => (
                                <blockquote>
                                    <p>{testimonial.quote}</p>
                                    <footer>â€” {testimonial.author}</footer>
                                </blockquote>
                            ))}
                        </>
                    )
                }
            </div>
        </article>

        {
            (prevProject || nextProject) && (
                <div class="my-16 sm:my-24">
                    <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">View Next</h2>
                    {nextProject && <ProjectPreview project={nextProject} class="mb-10 sm:mb-12" headingLevel="h3" />}
                    {prevProject && <ProjectPreview project={prevProject} class="mb-10 sm:mb-12" headingLevel="h3" />}
                </div>
            )
        }
    </main>
</BaseLayout>
